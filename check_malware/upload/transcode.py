import os
import boto3
import subprocess
from urllib.parse import urlparse

# Configuration
INPUT_VIDEO_URL = os.environ.get("VIDEO_URL")  # Full S3 URL or public link
HLS_BUCKET = os.environ.get("HLS_BUCKET")      # e.g., 'your-hls-bucket'
HLS_FOLDER = os.environ.get("HLS_FOLDER", "output")  # e.g., 'video123'

s3 = boto3.client('s3')


def download_video(video_url, local_path='input.mp4'):
    print(f"Downloading {video_url}")
    parsed = urlparse(video_url)

    if parsed.netloc.endswith("amazonaws.com"):
        # S3 URL pattern: https://bucket.s3.amazonaws.com/key
        bucket = parsed.netloc.split('.')[0]
        key = parsed.path.lstrip('/')
        s3.download_file(bucket, key, local_path)
    else:
        # Assume public URL
        import requests
        r = requests.get(video_url, stream=True)
        with open(local_path, 'wb') as f:
            for chunk in r.iter_content(chunk_size=8192):
                f.write(chunk)
    print("Download complete.")


def transcode_to_hls(input_file):
    os.makedirs("hls", exist_ok=True)
    resolutions = {
        "360p": "640x360",
        "480p": "854x480",
        "720p": "1280x720",
    }

    for name, res in resolutions.items():
        out_path = f"hls/{name}.m3u8"
        cmd = [
            "ffmpeg", "-i", input_file,
            "-vf", f"scale={res}",
            "-c:a", "aac", "-ar", "48000", "-b:a", "128k",
            "-c:v", "h264", "-profile:v", "main",
            "-crf", "20", "-sc_threshold", "0",
            "-g", "48", "-keyint_min", "48",
            "-hls_time", "4", "-hls_playlist_type", "vod",
            "-hls_segment_filename", f"hls/{name}_%03d.ts",
            out_path
        ]
        print(f"Running FFmpeg for {name}...")
        subprocess.run(cmd, check=True)
        print(f"{name} HLS created.")


def upload_hls_folder(bucket, folder, local_dir='hls'):
    for root, _, files in os.walk(local_dir):
        for file in files:
            local_path = os.path.join(root, file)
            s3_key = f"{folder}/{file}"
            print(f"Uploading {s3_key}")
            s3.upload_file(local_path, bucket, s3_key)
    print("Upload complete.")


if __name__ == "__main__":
    video_file = "input.mp4"
    download_video(INPUT_VIDEO_URL, video_file)
    transcode_to_hls(video_file)
    upload_hls_folder(HLS_BUCKET, HLS_FOLDER)
