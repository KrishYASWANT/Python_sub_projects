import os
import time
import boto3
import subprocess
from celery import shared_task
from django.conf import settings
from .models import UploadedFile

@shared_task
def scan_and_upload_file(file_id):
    try:
        uploaded = UploadedFile.objects.get(id=file_id)

        # ‚úÖ Construct full file path safely
        file_path = os.path.join(settings.MEDIA_ROOT, uploaded.file.name)
        print(f"[DEBUG] Full file path to scan: {file_path}")

        # üß™ Wait a bit in case file system is catching up
        time.sleep(3)

        if not os.path.exists(file_path):
            print(f"[ERROR] File does not exist at: {file_path}")
            return

        # 1Ô∏è‚É£ Scan with ClamAV
        normalized_path = os.path.normpath(file_path)
        print(f"[DEBUG] Normalized file path passed to ClamAV: {normalized_path}")
        result = subprocess.run([r'D:\Applications\clamav-1.4.2.win.x64\clamav-1.4.2.win.x64\clamscan.exe', normalized_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

        #result = subprocess.run(['clamscan', file_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        output = result.stdout
        print(f"[CLAMAV OUTPUT] {output}")

        if "Infected files: 0" in output:
            uploaded.is_clean = True

            # 2Ô∏è‚É£ Upload to S3
            s3 = boto3.client('s3')
            s3_key = f"uploads/{os.path.basename(file_path)}"
            s3.upload_file(file_path, settings.AWS_STORAGE_BUCKET_NAME, s3_key)

            # 3Ô∏è‚É£ Generate public S3 URL
            file_url = f"https://{settings.AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com/{s3_key}"
            uploaded.file_url = file_url
        else:
            uploaded.is_clean = False
            uploaded.file_url = ''  # Clear if infected

        uploaded.save()

    except UploadedFile.DoesNotExist:
        print(f"[!] UploadedFile with ID {file_id} not found.")
    except Exception as e:
        print(f"[!] Error processing file ID {file_id}: {str(e)}")
