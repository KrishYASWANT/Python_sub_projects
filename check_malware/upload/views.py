""" from django.shortcuts import render, redirect
from .forms import UploadFileForm
from .models import UploadedFile
from .tasks import scan_and_upload_file
import os
def upload_file(request):
    if request.method == 'POST':
        form = UploadFileForm(request.POST, request.FILES)
        if form.is_valid():
            uploaded = form.save(commit=False)
            print("File exists before Celery call:", os.path.exists(uploaded.file.path))
            uploaded.file_type = request.FILES['file'].content_type
            uploaded.save()

            # Trigger background scanning + upload
            scan_and_upload_file.delay(uploaded.id)
            return redirect('upload_success')
    else:
        form = UploadFileForm()
    return render(request, 'upload/upload.html', {'form': form})
"""


 
from django.core.files.storage import default_storage
from django.shortcuts import render, redirect
from .forms import UploadFileForm
from .models import UploadedFile
from .tasks import scan_and_upload_file
import time
import os

def upload_file(request):
    if request.method == 'POST':
        form = UploadFileForm(request.POST, request.FILES)
        if form.is_valid():
            uploaded_file = form.save()
            scan_and_upload_file.delay(uploaded_file.id)
            return redirect('/')
    else:
        form = UploadFileForm()
    files = UploadedFile.objects.order_by('-uploaded_at')[:10]
    return render(request, 'upload/upload.html', {'form': form, 'files': files})


def list_files(request):
    files = UploadedFile.objects.filter(is_clean=True, is_approved=True)
    return render(request, 'upload/list.html', {'files': files})

def upload_success(request):
    return render(request, 'upload/success.html')