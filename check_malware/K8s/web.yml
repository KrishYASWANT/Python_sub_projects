# k8s/web.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: check-malware-web
  namespace: check-malware
spec:
  replicas: 2
  selector:
    matchLabels:
      app: check-malware-web
  template:
    metadata:
      labels:
        app: check-malware-web
    spec:
      containers:
      - name: web
        image: your-registry/check-malware-web:latest
        imagePullPolicy: IfNotPresent
        command: ["gunicorn", "check_malware.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "3"]
        envFrom:
        - configMapRef:
            name: check-malware-config
        - secretRef:
            name: check-malware-secrets
        env:
        - name: CLAMAV_HOST
          valueFrom:
            configMapKeyRef:
              name: check-malware-config
              key: CLAMAV_HOST
        - name: CLAMAV_PORT
          valueFrom:
            configMapKeyRef:
              name: check-malware-config
              key: CLAMAV_PORT
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: media
          mountPath: /app/media
        readinessProbe:
          httpGet:
            path: /healthz/   # implement a simple view that returns 200
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz/
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
      volumes:
      - name: media
        persistentVolumeClaim:
          claimName: media-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: check-malware-web
  namespace: check-malware
spec:
  selector:
    app: check-malware-web
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
